/* The `.filterable` class is styling an element with flexbox properties. It sets the element to be a
flex container with a column direction, meaning its children will be stacked vertically. The `gap:
1rem;` property creates a gap of 1rem between the child elements within the flex container. */
.filterable {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* The `.search-bar` class is styling an element as a flex container with a column direction and a gap
of 0.5rem between its child elements. Inside the `.search-bar` element, there is a nested element
with the class `.search-bar__field` which is also styled as a flex container with a column direction
and a gap of 0.25rem between its child elements. This structure allows for creating a search bar
with specific styling for the search field within it. */
.search-bar {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  &__field {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
}

/* The `.board` class is styling an element as a flex container with a column direction and a gap of
0.25rem between its child elements. Within the `.board` element, there are nested elements styled as
follows: */
.board {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;

  &__category {
    font-size: larger;
    font-weight: bold;
    text-align: center;
  }

  &__header {
    display: grid;
    grid-template-columns: repeat(12, minmax(0, 1fr));
    gap: 0.25rem;

    &__name {
      grid-column: span 7 / span 7;
    }

    &__price {
      grid-column: span 5 / span 5;
    }
  }

  &__content {
    display: flex;
    flex-direction: column;
    gap: .5rem;
  }
}

/* The `.row` class is styling an element as a grid container with 12 columns, each column having a
minimum size of 0 and a maximum size of 1fr (flexible size). There is a gap of 0.25rem between the
grid items within the grid container. */
.row {
  display: grid;
  grid-template-columns: repeat(12, minmax(0, 1fr));
  gap: 0.25rem;

  &__name {
    grid-column: span 7 / span 7;
  }

  &__price {
    grid-column: span 5 / span 5;
  }
}